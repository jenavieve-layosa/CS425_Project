{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JLAYOSA\\\\final_project\\\\CS425_Project\\\\package\\\\src\\\\views\\\\pages\\\\Lesson2.jsx\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Container, Card, Button, CardTitle, CardText, CardBody } from 'reactstrap';\nimport Header from \"../../components/header/header.jsx\";\nimport HeaderBanner from \"../../components/banner/banner.jsx\";\nimport Footer from \"../../components/footer/footer.jsx\";\nimport img5 from '../../assets/images/img5.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lesson2 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(HeaderBanner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"lesson-title font-bold text-darkblue\",\n                children: \"Lesson 2: A deeper dive into ROS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"lesson-subtitle text-darkblue\",\n                children: \"The significance of ROS, why did everyone start using ROS, and how you can start using it now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              border: '5px solid #ddd',\n              borderRadius: '15px',\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle font-bold text-darkblue\",\n              children: \"Course Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Welcome to Lesson 2 of our ROS Programming course. In this lesson, we'll dive into the fundamentals of ROS architecture, console commands, and creating ROS packages. By the end of this lesson, you'll have a solid understanding of key ROS concepts and be ready to take your first steps in programming robots.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle font-bold text-darkblue\",\n              children: \"What will you learn?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"ROS architecture: Master, nodes, topics, messages, services, parameters, and actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Console commands: Navigating and analyzing the ROS system and the catkin workspace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Creating ROS packages: Structure, launch-files, and best practices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"By the end of this section, you will master the core elements of ROS architecture, including the roles of the ROS master, nodes, topics, messages, services, parameters, and actions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"static-slider-1\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              className: \"align-self-center text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"subtitle op-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            border: '0px solid #ddd',\n            borderRadius: '10px',\n            marginBottom: '15px',\n            marginTop: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Fundamentals and history of ROS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ROS, born in the early 2000s at Stanford University, started as an open-source middleware framework for robotics. Its fundamental design principles revolve around modularity, reusability, and collaborative development. ROS provides a structured communication layer, a robust set of tools, and a flexible framework for creating intricate robot behaviors. Over the years, ROS has evolved through various versions, each introducing enhancements and expanded capabilities, becoming a pivotal force in the robotics community.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"History of ROS: How did it get so popular?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ROS gained popularity due to its open-source nature, fostering collaboration and knowledge- sharing within the robotics community. As it evolved, ROS became a standard in research and industry, with widespread adoption in academia and various sectors. Its modular and extensible architecture contributed to its success, making it a go-to framework for robot software development.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Real industries leverage robots equipped with ROS for various applications. From manufacturing, where robots handle precision tasks, to healthcare, using robots for surgeries and patient care, ROS is integral in creating adaptable and intelligent robotic systems.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Using Python to move your robot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Programming a robot to move forward using Python and ROS involves understanding ROS nodes, topics, and Python scripts. By creating a simple script, we can command the robot to move forward. This hands-on experience provides a practical understanding of the integration between Python and ROS for basic robot control.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"What is a Simulation?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Simulation is a pivotal concept in robotics development. It involves creating a virtual environment to test and validate robot behaviors before deploying them in the physical world. ROS provides simulation tools, allowing developers to mimic real-world scenarios and refine their algorithms in a controlled, risk-free environment. One of the barriers that exists in robotics is access to hardware which can be expensive and confusing, so using simulations enables us to extend the outreach of robotics education. It is a pivotal aspect of FORE and many other robotics centered projects and companies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Becoming a ROS expert!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We are going to start diving deeper into the specifics of how ROS works and how you can use it to your advantage! ROS, being a versatile framework, offers a range of functions that are essential for developing robotic systems. Understanding these functions is crucial for effective robot programming and development.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Nodes and Topics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Nodes: In ROS, a node is an independent process that performs a specific task. Nodes communicate with each other through a publish-subscribe mechanism using topics. A node can publish data to a topic, and any node interested in that information can subscribe to that topic.\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Example: \\u25CF Node 1 (Publisher): Publishes information about the robot's position on the \\\"robot_position\\\" topic. \\u25CF Node 2 (Subscriber): Subscribes to the \\\"robot_position\\\" topic to receive and process the position information.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Packages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"A ROS package is a directory that contains everything necessary for a specific functionality. It includes code, configuration files, datasets, and documentation. Packages promote modularity and organization in ROS development.\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Example: \\u25CF Navigation Package: Contains code for robot navigation, configuration files for sensors, and datasets for mapping.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Services and Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Services: ROS services allow communication between nodes through a request-response mechanism. A node can offer a service, and other nodes can request and receive the service.\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Example: \\u25CF Node 1 (Service Provider): Offers a service to calculate the distance traveled by the robot. \\u25CF Node 2 (Service Client): Requests the service to calculate the distance. Actions: Similar to services, actions enable asynchronous, long-running tasks. Unlike services, actions allow feedback during the execution of the task.\", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Example: \\u25CF Node 1 (Action Server): Executes a task to explore an environment, providing feedback on the progress. \\u25CF Node 2 (Action Client): Sends a goal to explore the environment and receives feedback on the progress.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Launch Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ROS launch files simplify the process of starting multiple nodes and configuring parameters. Launch files are XML files that define how nodes should be launched and can include parameters and arguments.\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Example: \\u25CF Navigation Launch File: Starts nodes for mapping, localization, and path planning with predefined parameters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Transform Library\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The TF library in ROS manages coordinate frame transformations. It allows nodes to track the position and orientation of different components in a robot system.\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Example: \\u25CF Robot Arm Node: Publishes the transformation between the base of the robot and the end-effector.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subtitle font-bold text-darkblue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subtitle font-bold text-darkblue\",\n            children: \"Knowledge Check: See if you can answer these questions!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"What are the fundamental design principles of ROS?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Lesson2;\nLesson2.propTypes = {\n  classes: PropTypes.object\n};\nexport default Lesson2;\nvar _c;\n$RefreshReg$(_c, \"Lesson2\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","PropTypes","Row","Col","Container","Card","Button","CardTitle","CardText","CardBody","Header","HeaderBanner","Footer","img5","jsxDEV","_jsxDEV","Lesson2","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","md","maxWidth","style","padding","border","borderRadius","marginBottom","marginTop","_c","propTypes","classes","object","$RefreshReg$"],"sources":["C:/Users/JLAYOSA/final_project/CS425_Project/package/src/views/pages/Lesson2.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Col, Container, Card, Button, CardTitle, CardText, CardBody } from 'reactstrap';\r\n\r\nimport Header from \"../../components/header/header.jsx\";\r\nimport HeaderBanner from \"../../components/banner/banner.jsx\";\r\nimport Footer from \"../../components/footer/footer.jsx\";\r\nimport img5 from '../../assets/images/img5.jpg';\r\n\r\nconst Lesson2 = () => {\r\n    return (\r\n\r\n        <div id=\"main-wrapper\">\r\n             <Header />\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"container-fluid\">\r\n                    <HeaderBanner />\r\n                    <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"12\" className=\"text-center\">\r\n                            <h1 className=\"lesson-title font-bold text-darkblue\">Lesson 2: A deeper dive into ROS</h1>\r\n                            <h6 className=\"lesson-subtitle text-darkblue\">The significance of ROS, why did everyone start using ROS, and how you can start using it now</h6>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                    \r\n                    <Container maxWidth=\"lg\">\r\n                    <div style={{ padding: '20px', border: '5px solid #ddd', borderRadius: '15px', marginBottom: '20px' }}>\r\n                     <h2 className=\"subtitle font-bold text-darkblue\">Course Overview</h2>\r\n                        <p>\r\n                            Welcome to Lesson 2 of our ROS Programming course. In this lesson, we'll dive into the fundamentals of ROS architecture,\r\n                            console commands, and creating ROS packages. By the end of this lesson, you'll have a solid understanding of key ROS concepts\r\n                            and be ready to take your first steps in programming robots.\r\n                        </p>\r\n\r\n                        <h2 className=\"subtitle font-bold text-darkblue\">What will you learn?</h2>\r\n                        <ul>\r\n                            <li>ROS architecture: Master, nodes, topics, messages, services, parameters, and actions</li>\r\n                            <li>Console commands: Navigating and analyzing the ROS system and the catkin workspace</li>\r\n                            <li>Creating ROS packages: Structure, launch-files, and best practices</li>\r\n                        </ul>\r\n                        </div>\r\n                        <p>\r\n                            By the end of this section, you will master the core elements of ROS architecture, including the roles of the ROS master,\r\n                            nodes, topics, messages, services, parameters, and actions. \r\n                            \r\n                        </p>\r\n                        \r\n                        </Container>\r\n                        <div className=\"static-slider-1\">\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col md=\"6\" className=\"align-self-center text-center\">\r\n                                        <h1 className=\"title\"></h1>\r\n                                        <h6 className=\"subtitle op-8\"></h6>\r\n                                    </Col>\r\n                                </Row>\r\n                        </div>\r\n                        <p>\r\n                            .\r\n                        </p> \r\n                        <div style={{ padding: '15px', border: '0px solid #ddd', borderRadius: '10px', marginBottom: '15px', marginTop: '5px' }}>\r\n\r\n                        <h3 className= \"subtitle font-bold text-darkblue\">Fundamentals and history of ROS</h3>\r\n\r\n                        <p>\r\n                        ROS, born in the early 2000s at Stanford University, started as an open-source middleware\r\n                        framework for robotics. Its fundamental design principles revolve around modularity, reusability,\r\n                        and collaborative development. ROS provides a structured communication layer, a robust set of\r\n                        tools, and a flexible framework for creating intricate robot behaviors. Over the years, ROS has\r\n                        evolved through various versions, each introducing enhancements and expanded capabilities,\r\n                        becoming a pivotal force in the robotics community.\r\n                        </p>\r\n\r\n                        <h3 className= \"subtitle font-bold text-darkblue\">History of ROS: How did it get so popular?</h3>       \r\n                        <p>\r\n\r\n                        ROS gained popularity due to its open-source nature, fostering collaboration and knowledge-\r\n                        sharing within the robotics community. As it evolved, ROS became a standard in research and\r\n                        industry, with widespread adoption in academia and various sectors. Its modular and extensible\r\n                        architecture contributed to its success, making it a go-to framework for robot software\r\n                        development.\r\n                            \r\n                        </p>  \r\n\r\n                        <p>\r\n\r\n                        Real industries leverage robots equipped with ROS for various applications. From\r\n                        manufacturing, where robots handle precision tasks, to healthcare, using robots for surgeries and\r\n                        patient care, ROS is integral in creating adaptable and intelligent robotic systems.\r\n\r\n                        </p>\r\n\r\n\r\n                        <h3 className= \"subtitle font-bold text-darkblue\">Using Python to move your robot</h3>\r\n\r\n                        <p>\r\n                        Programming a robot to move forward using Python and ROS involves understanding ROS\r\n                        nodes, topics, and Python scripts. By creating a simple script, we can command the robot to\r\n                        move forward. This hands-on experience provides a practical understanding of the integration\r\n                        between Python and ROS for basic robot control.\r\n                        </p>  \r\n\r\n                        <h3 className= \"subtitle font-bold text-darkblue\">What is a Simulation?</h3>       \r\n\r\n                        <p>\r\n                        Simulation is a pivotal concept in robotics development. It involves creating a virtual\r\n                        environment to test and validate robot behaviors before deploying them in the physical world.\r\n                        ROS provides simulation tools, allowing developers to mimic real-world scenarios and refine\r\n                        their algorithms in a controlled, risk-free environment. One of the barriers that exists in robotics is access to hardware which can be expensive and confusing, so using simulations \r\n                        enables us to extend the outreach of robotics education. It is a pivotal aspect of FORE and many other robotics centered projects and companies. \r\n\r\n                        </p>\r\n                        \r\n                        <h3 className= \"subtitle font-bold text-darkblue\">Becoming a ROS expert!</h3>       \r\n                        <p>\r\n                            We are going to start diving deeper into the specifics of how ROS works and how you can use it to your advantage!\r\n                            ROS, being a versatile framework, offers a range of functions that are essential for developing\r\n                            robotic systems. Understanding these functions is crucial for effective robot programming and\r\n                            development.\r\n                            \r\n                        </p> \r\n\r\n                        <h5 className= \"subtitle font-bold text-darkblue\">Nodes and Topics</h5>       \r\n                        <p>\r\n                        Nodes: In ROS, a node is an independent process that performs a specific task. Nodes\r\n                        communicate with each other through a publish-subscribe mechanism using topics. A\r\n                        node can publish data to a topic, and any node interested in that information can\r\n                        subscribe to that topic.\r\n                        <p>\r\n                        Example:\r\n                        ● Node 1 (Publisher): Publishes information about the robot&#39;s position on the\r\n                        &quot;robot_position&quot; topic.\r\n                        ● Node 2 (Subscriber): Subscribes to the &quot;robot_position&quot; topic to receive and\r\n                        process the position information.\r\n                        </p> \r\n                        </p>\r\n\r\n                        <h5 className= \"subtitle font-bold text-darkblue\">Packages</h5> \r\n                        <p>\r\n                        A ROS package is a directory that contains everything necessary for a specific\r\n                        functionality. It includes code, configuration files, datasets, and documentation. Packages\r\n                        promote modularity and organization in ROS development. \r\n                        <p>\r\n\r\n                        Example:\r\n                        ● Navigation Package: Contains code for robot navigation, configuration files for\r\n                        sensors, and datasets for mapping.           \r\n                        </p>\r\n                        </p>\r\n\r\n                        <h5 className= \"subtitle font-bold text-darkblue\">Services and Actions</h5>\r\n                        <p>\r\n                        Services: ROS services allow communication between nodes through a request-response\r\n                        mechanism. A node can offer a service, and other nodes can request and receive the\r\n                        service.\r\n\r\n                        <p>\r\n                        Example:\r\n                        ● Node 1 (Service Provider): Offers a service to calculate the distance traveled by\r\n                        the robot.\r\n                        ● Node 2 (Service Client): Requests the service to calculate the distance.\r\n                        Actions: Similar to services, actions enable asynchronous, long-running tasks. Unlike\r\n                        services, actions allow feedback during the execution of the task.\r\n                        \r\n                        <p>\r\n                        Example:\r\n                        ● Node 1 (Action Server): Executes a task to explore an environment, providing\r\n                        feedback on the progress.\r\n                        ● Node 2 (Action Client): Sends a goal to explore the environment and receives\r\n                        feedback on the progress.\r\n                        </p>\r\n                        </p>\r\n                        </p>\r\n\r\n                        <h5 className= \"subtitle font-bold text-darkblue\">Launch Files</h5>\r\n\r\n                        <p>\r\n                        ROS launch files simplify the process of starting multiple nodes and\r\n                        configuring parameters. Launch files are XML files that define how nodes should be\r\n                        launched and can include parameters and arguments.\r\n                        <p>\r\n                        Example:\r\n                        ● Navigation Launch File: Starts nodes for mapping, localization, and path planning\r\n                        with predefined parameters.  \r\n                        </p>\r\n                        </p>\r\n\r\n                        <h5 className= \"subtitle font-bold text-darkblue\">Transform Library</h5>\r\n\r\n                        <p>\r\n                        The TF library in ROS manages coordinate frame transformations. It allows\r\n                        nodes to track the position and orientation of different components in a robot system. \r\n                        <p>\r\n                        Example:\r\n                        ● Robot Arm Node: Publishes the transformation between the base of the robot and\r\n                        the end-effector.  \r\n                        </p>\r\n                        </p>\r\n                        <h5 className= \"subtitle font-bold text-darkblue\"></h5>\r\n\r\n\r\n\r\n                        <h3 className= \"subtitle font-bold text-darkblue\">Knowledge Check: See if you can answer these questions!</h3>\r\n                        <ol>\r\n                            <li>What are the fundamental design principles of ROS?</li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            \r\n                        </ol>\r\n\r\n                        </div>                  \r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nLesson2.propTypes = {\r\n    classes: PropTypes.object\r\n};\r\n\r\nexport default Lesson2;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,YAAY;AAE7F,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,IAAI,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,oBAEID,OAAA;IAAKE,EAAE,EAAC,cAAc;IAAAC,QAAA,gBACjBH,OAAA,CAACL,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXP,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAL,QAAA,eACzBH,OAAA;QAAKQ,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC5BH,OAAA,CAACJ,YAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChBP,OAAA,CAACX,SAAS;UAAAc,QAAA,eACVH,OAAA,CAACb,GAAG;YAACqB,SAAS,EAAC,wBAAwB;YAAAL,QAAA,eACnCH,OAAA,CAACZ,GAAG;cAACqB,EAAE,EAAC,IAAI;cAACD,SAAS,EAAC,aAAa;cAAAL,QAAA,gBAChCH,OAAA;gBAAIQ,SAAS,EAAC,sCAAsC;gBAAAL,QAAA,EAAC;cAAgC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1FP,OAAA;gBAAIQ,SAAS,EAAC,+BAA+B;gBAAAL,QAAA,EAAC;cAA6F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE/I;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,eAEZP,OAAA,CAACX,SAAS;UAACqB,QAAQ,EAAC,IAAI;UAAAP,QAAA,gBACxBH,OAAA;YAAKW,KAAK,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,MAAM,EAAE,gBAAgB;cAAEC,YAAY,EAAE,MAAM;cAAEC,YAAY,EAAE;YAAO,CAAE;YAAAZ,QAAA,gBACrGH,OAAA;cAAIQ,SAAS,EAAC,kCAAkC;cAAAL,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClEP,OAAA;cAAAG,QAAA,EAAG;YAIH;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAEJP,OAAA;cAAIQ,SAAS,EAAC,kCAAkC;cAAAL,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1EP,OAAA;cAAAG,QAAA,gBACIH,OAAA;gBAAAG,QAAA,EAAI;cAAoF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7FP,OAAA;gBAAAG,QAAA,EAAI;cAAkF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3FP,OAAA;gBAAAG,QAAA,EAAI;cAAkE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACNP,OAAA;YAAAG,QAAA,EAAG;UAIH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEO,CAAC,eACZP,OAAA;UAAKQ,SAAS,EAAC,iBAAiB;UAAAL,QAAA,eACxBH,OAAA,CAACb,GAAG;YAACqB,SAAS,EAAC,wBAAwB;YAAAL,QAAA,eACnCH,OAAA,CAACZ,GAAG;cAACqB,EAAE,EAAC,GAAG;cAACD,SAAS,EAAC,+BAA+B;cAAAL,QAAA,gBACjDH,OAAA;gBAAIQ,SAAS,EAAC;cAAO;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3BP,OAAA;gBAAIQ,SAAS,EAAC;cAAe;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACNP,OAAA;UAAAG,QAAA,EAAG;QAEH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJP,OAAA;UAAKW,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,MAAM,EAAE,gBAAgB;YAAEC,YAAY,EAAE,MAAM;YAAEC,YAAY,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAM,CAAE;UAAAb,QAAA,gBAExHH,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEtFP,OAAA;YAAAG,QAAA,EAAG;UAOH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAA0C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjGP,OAAA;YAAAG,QAAA,EAAG;UAQH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJP,OAAA;YAAAG,QAAA,EAAG;UAMH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAGJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEtFP,OAAA;YAAAG,QAAA,EAAG;UAKH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE5EP,OAAA;YAAAG,QAAA,EAAG;UAOH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7EP,OAAA;YAAAG,QAAA,EAAG;UAMH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvEP,OAAA;YAAAG,QAAA,GAAG,mRAKH,eAAAH,OAAA;cAAAG,QAAA,EAAG;YAMH;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/DP,OAAA;YAAAG,QAAA,GAAG,oOAIH,eAAAH,OAAA;cAAAG,QAAA,EAAG;YAKH;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3EP,OAAA;YAAAG,QAAA,GAAG,iLAKH,eAAAH,OAAA;cAAAG,QAAA,GAAG,uVAQH,eAAAH,OAAA;gBAAAG,QAAA,EAAG;cAMH;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEnEP,OAAA;YAAAG,QAAA,GAAG,4MAIH,eAAAH,OAAA;cAAAG,QAAA,EAAG;YAIH;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEJP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAExEP,OAAA;YAAAG,QAAA,GAAG,kKAGH,eAAAH,OAAA;cAAAG,QAAA,EAAG;YAIH;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACJP,OAAA;YAAIQ,SAAS,EAAE;UAAkC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAIvDP,OAAA;YAAIQ,SAAS,EAAE,kCAAkC;YAAAL,QAAA,EAAC;UAAuD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9GP,OAAA;YAAAG,QAAA,gBACIH,OAAA;cAAAG,QAAA,EAAI;YAAkD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3DP,OAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTP,OAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTP,OAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTP,OAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTP,OAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNP,OAAA,CAACH,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAGd,CAAC;AAAAU,EAAA,GApNKhB,OAAO;AAsNbA,OAAO,CAACiB,SAAS,GAAG;EAChBC,OAAO,EAAEjC,SAAS,CAACkC;AACvB,CAAC;AAED,eAAenB,OAAO;AAAC,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}